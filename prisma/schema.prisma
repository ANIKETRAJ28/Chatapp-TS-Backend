// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String          @id @default(uuid())
  username    String          @unique
  name        String
  email       String          @unique
  password    String
  avatar      String
  messages    Message[]
  communities UserCommunity[]
}

model Community {
  id          String          @id @default(uuid())
  name        String?
  description String?
  avatar      String?
  type        CommunityType
  messages    Message[]
  users       UserCommunity[]
}

model Message {
  id          String      @id @default(uuid())
  content     String
  type        MessageType
  timestamp   DateTime    @default(now())
  communityId String
  userId      String
  isDeleted   Boolean     @default(false)
  user        User        @relation(fields: [userId], references: [id])
  community   Community   @relation(fields: [communityId], references: [id])
}

model UserCommunity {
  id           String    @id @default(uuid())
  userId       String
  communityId  String
  isAdmin      Boolean?
  isSuperAdmin Boolean?
  isDeleted    Boolean   @default(false)
  user         User      @relation(fields: [userId], references: [id])
  community    Community @relation(fields: [communityId], references: [id])

  @@unique([userId, communityId])
}

enum MessageType {
  text
  image
  video
}

enum CommunityType {
  friend
  group
}
